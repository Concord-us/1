import os
import subprocess
import time
import sys
from multiprocessing import Process

"""
Version: Chia Check_3.10_Windows_多线程版
"""

def tool_print(line, text, fname=None, health=None, status=None):
    output = time.strftime("[%H:%M:%S]", time.localtime()) + " "
    if status is not None:
        output += "[" + status.upper() + "] "
    if fname is not None:
        output += "文件 " + fname + " "
    if health is not None:
        output += "健康度 " + health + " "
    output += text
    sys.stdout.write(output + "\n")
    sys.stdout.flush()

def delete_plot_file(plot_path):
    drive = os.path.splitdrive(plot_path)[0]
    plot_files = [plot for plot in os.listdir(plot_path) if os.path.isfile(os.path.join(plot_path, plot)) and plot.endswith("plot")]
    total_files = len(plot_files)
    checked_files = 0
    while len(plot_files) > 0:
        plot1 = plot_files.pop()
        plot2 = plot_files.pop() if len(plot_files) > 0 else None
        plot_str = f"({checked_files+1}/{total_files})"
        if plot2 is not None:
            plot_str += f"({checked_files+2}/{total_files})"
        tool_print(str(sys._getframe().f_lineno), f"正在检查 {plot_str}", fname=os.path.join(drive, plot1), health=None, status="提示")
        command = ["C:\\daemon\\chia.exe", 'plots', 'check', '-g', os.path.join(plot_path, plot1)]
        if plot2 is not None:
            command.extend(['-g', os.path.join(plot_path, plot2)])
        sub = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        out = sub.stderr.split('Proofs')
        if len(out) > 1:
            out = out[1].split(", ")[1].split("\n")[0].split("\x1b[0m")[0].strip()
            if float(out) < 0.8:
                os.remove(os.path.join(plot_path, plot1))
                tool_print(str(sys._getframe().f_lineno), "已删除", fname=os.path.join(drive, plot1), health=out, status="警告")
            else:
                tool_print(str(sys._getframe().f_lineno), "已检查", fname=os.path.join(drive, plot1), health=out, status="正常")
            if plot2 is not None:
                if float(out) < 0.8:
                    os.remove(os.path.join(plot_path, plot2))
                    tool_print(str(sys._getframe().f_lineno), "已删除", fname=os.path.join(drive, plot2), health=out, status="警告")
                else:
                    tool_print(str(sys._getframe().f_lineno), "已检查", fname=os.path.join(drive, plot2), health=out, status="正常")
        else:
            tool_print(str(sys._getframe().f_lineno), "出错", fname=os.path.join(drive, plot1), health=None, status="错误")
        checked_files += 2 if plot2 is not None else 1
    new_label = f"已检查{time.strftime('-%Y-%m-%d-%H-%M-%S')}"
    os.system(f"label {drive} \"{new_label}\"")
    tool_print(str(sys._getframe().f_lineno), f"磁盘 {plot_path} ****** 检查完毕 ******，已为您更新卷标为当前完成时间 \"{new_label}\"", fname=None, health=None, status="提示")


if __name__ == "__main__":
    processes = []
    for candidate_disk in ['E:\\', 'F:\\', 'A:\\']:
        plot_path = os.path.abspath(os.path.expanduser(os.path.expandvars(candidate_disk)))
        p = Process(target=delete_plot_file, args=(plot_path,))
        p.start()
        processes.append(p)
        tool_print(str(sys._getframe().f_lineno), f"开始检查磁盘内的 Chia Plot 文件健康状况 {candidate_disk}", fname=None, health=None, status="提示")
    for p in processes:
        p.join()
